<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">


    <context:component-scan base-package="com.modul.master"></context:component-scan>
    <tx:annotation-driven/>

    <beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <beans:property name="basename" value="classpath:messages"/>
        <!--        <property name="fallbackToSystemLocale" value="false"/>-->
    </beans:bean>
    <!--    <bean id="userValidator" class="com.modul.master.validator.UserValidator" />-->


    <beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <beans:property name="location">
            <beans:value>classpath:application.properties</beans:value>
        </beans:property>
    </beans:bean>

    <beans:bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource">
        <beans:property name="driverClassName" value="${spring.datasource.driverClassName}"/>
        <beans:property name="url" value="${spring.datasource.url}"/>
        <beans:property name="username" value="${spring.datasource.username}"/>
        <beans:property name="password" value="${spring.datasource.password}"/>
    </beans:bean>

    <beans:bean class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" id="sessionFactory">
        <beans:property name="dataSource" ref="datasource"></beans:property>
        <beans:property name="annotatedClasses">
            <beans:list>
                <beans:value>com.modul.master.model.MstSupplier</beans:value>
                <beans:value>com.modul.master.model.MstCategory</beans:value>
                <beans:value>com.modul.master.model.MstEmployee</beans:value>
                <beans:value>com.modul.master.model.MstRole</beans:value>
                <beans:value>com.modul.master.model.MstUser</beans:value>
                <beans:value>com.modul.master.model.MstItem</beans:value>
                <beans:value>com.modul.master.model.MstItemInventory</beans:value>
                <beans:value>com.modul.master.model.EmployeeOutlet</beans:value>
                <beans:value>com.modul.master.model.MstItemVariant</beans:value>
                <beans:value>com.modul.master.model.MstOutlet</beans:value>
                <beans:value>com.modul.master.model.MstProvince</beans:value>
                <beans:value>com.modul.master.model.MstRegion</beans:value>
                <beans:value>com.modul.master.model.MstDistrict</beans:value>
                <beans:value>com.modul.master.model.TPurchaseRequest</beans:value>
                <beans:value>com.modul.master.model.TPurchaseRequestDetail</beans:value>
            </beans:list>
        </beans:property>

        <beans:property name="hibernateProperties">
            <beans:props>
                <!--                awalnya create, terus nanti diganti jadi update-->
                <beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
                <beans:prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate5.SpringSessionContext</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>

    <beans:bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="sessionFactory"/>
    </beans:bean>

    <!-- spring security configuration -->
    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/suppliers" access="hasAnyAuthority('Administrator','Back Office')"/>
        <intercept-url pattern="/listCategory" access="hasAnyAuthority('Administrator','Back Office')"/>
        <intercept-url pattern="/items" access="hasAnyAuthority('Administrator','Back Office')"/>
        <intercept-url pattern="/outlets" access="hasAnyAuthority('Administrator','Back Office')"/>
        <intercept-url pattern="/chooseOutlet" access="hasAnyAuthority('Administrator','Back Office')"/>
        <intercept-url pattern="/listRequest" access="hasAuthority('Back Office')"/>


        <!-- user-defined login form redirection -->
        <form-login login-page="/login"
                    default-target-url="/chooseOutlet"
                    authentication-failure-url="/login?error"
                    username-parameter="username"
                    password-parameter="password" />

        <!-- logout url -->
        <logout logout-success-url="/login?logout" />

        <!-- csrf disabled -->
        <csrf disabled="true" />
    </http>

    <!-- spring authentication configuration via database -->
    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="datasource"
                               users-by-username-query="select username, password, role_id from pos_mst_user where username = ?"
                               authorities-by-username-query="select u.username, r.name from pos_mst_user u, pos_mst_role r where  u.role_id = r.id and u.username = ?" />
        </authentication-provider>
    </authentication-manager>

</beans:beans>